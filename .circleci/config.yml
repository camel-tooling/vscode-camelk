version: 2.1
 
jobs:
  build:
    parameters:
      isInsider:
        type: boolean
        default: false
    machine:
      image: ubuntu-2004:202010-01
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install Node environment
          command: |
            curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -
            sudo apt-get install -y nodejs
      - run:
          name: install-vsce
          command: sudo npm install -g vsce
      - run:
          name: npm-ci
          command: npm ci
      - run:
          name: npm-vscode:prepublish
          command: npm run vscode:prepublish
      - run:
          name: vsce-package
          command: vsce package
      - run:
          name: Configure Minikube
          command: |
            curl -LO https://github.com/kubernetes/minikube/releases/download/v1.19.0/minikube_1.19.0-0_amd64.deb
            sudo dpkg -i minikube_1.19.0-0_amd64.deb
            minikube start --vm-driver=docker --kubernetes-version=v1.20.0
            minikube addons enable registry
      - run:
          name: Configure Kamel
          command: |               
            # Download and provide in path kamel.
            curl -Lo kamel.tar.gz https://github.com/apache/camel-k/releases/download/v1.4.0/camel-k-client-1.4.0-linux-64bit.tar.gz
            tar -zxvf kamel.tar.gz
            chmod +x kamel
            sudo mv kamel /usr/local/bin/
            kamel install
            # Clean CLI which were used to start the Kubernetes instance
            sudo rm /usr/local/bin/kamel
      - when:
          condition: <<parameters.isInsider>>
          steps:
            - run:
                name: Set VS Code Insider environment variable for testing
                command: |
                  echo 'export VSCODE_VERSION_TEST="insiders"' >> $BASH_ENV
                  source $BASH_ENV
      - run:
          name: test
          no_output_timeout: 15m
          command: npm test
      - when:
          condition:
            not: <<parameters.isInsider>>
          steps:
            - run:
                name: test UI
                command: npm run ui-test
      - when:
          condition: <<parameters.isInsider>>
          steps:
            - run:
                name: test UI on Insider
                command: npm run ui-test-insiders
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ~/.npm
      - store_artifacts:
          path: /home/circleci/.config/Code/logs
          name: Store VS Code logs
      - store_artifacts:
          path: /home/circleci/.config/Code/User/workspaceStorage/
          name: Store VS Code User Workspace storage
      - when:
          condition:
            and:
              - equal: [master, << pipeline.git.branch >>]
              - not: <<parameters.isInsider>>
          steps:
            - sonarcloud/scan

orbs:
  sonarcloud: sonarsource/sonarcloud@1.0.2

workflows:
  version: 2
  vscode-camelk:
    jobs:
      - build:
          context: sonarcloud
  Insiders:
    jobs:
      - build:
          isInsider: true
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
